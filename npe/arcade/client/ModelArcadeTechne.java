// Date: 14.12.2013 12:23:53
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package npe.arcade.client;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelArcadeTechne extends ModelBase
{
    boolean isTopPart;

    //fields
    ModelRenderer Base;
    ModelRenderer Backwall;
    ModelRenderer GlassPane;
    ModelRenderer Top_Bar;
    ModelRenderer SideR1;
    ModelRenderer SideR2;
    ModelRenderer SideR3;
    ModelRenderer SideR4;
    ModelRenderer SideL1;
    ModelRenderer SideL2;
    ModelRenderer SideL3;
    ModelRenderer SideL4;

    ModelRenderer Button1;
    ModelRenderer Button2;
    ModelRenderer Button3;
    ModelRenderer Button4;
    ModelRenderer Stick;

    public ModelArcadeTechne()
    {
        textureWidth = 128;
        textureHeight = 128;

        Base = new ModelRenderer(this, 0, 0);
        Base.addBox(-8F, -8F, -8F, 16, 16, 16);
        Base.setRotationPoint(0F, 16F, 0F);
        Base.setTextureSize(128, 128);
        Base.mirror = true;
        setRotation(Base, 0F, 0F, 0F);
        GlassPane = new ModelRenderer(this, 0, 70);
        GlassPane.addBox(-6F, -17F, 0F, 12, 17, 0);
        GlassPane.setRotationPoint(0F, 8F, -3F);
        GlassPane.setTextureSize(128, 128);
        GlassPane.mirror = true;
        setRotation(GlassPane, -0.5F, 0F, 0F);
        Backwall = new ModelRenderer(this, 0, 40);
        Backwall.addBox(0F, 0F, 0F, 16, 16, 2);
        Backwall.setRotationPoint(-8F, -8F, 6F);
        Backwall.setTextureSize(128, 128);
        Backwall.mirror = true;
        setRotation(Backwall, 0F, 0F, 0F);
        Top_Bar = new ModelRenderer(this, 0, 62);
        Top_Bar.addBox(0F, 0F, 0F, 12, 2, 2);
        Top_Bar.setRotationPoint(-6F, -8F, 4F);
        Top_Bar.setTextureSize(128, 128);
        Top_Bar.mirror = true;
        setRotation(Top_Bar, 0F, 0F, 0F);
        SideR1 = new ModelRenderer(this, 100, 0);
        SideR1.addBox(0F, 0F, 0F, 2, 4, 10);
        SideR1.setRotationPoint(-8F, 4F, -4F);
        SideR1.setTextureSize(128, 128);
        SideR1.mirror = true;
        setRotation(SideR1, 0F, 0F, 0F);
        SideR2 = new ModelRenderer(this, 100, 20);
        SideR2.addBox(0F, 0F, 0F, 2, 4, 8);
        SideR2.setRotationPoint(-8F, 0F, -2F);
        SideR2.setTextureSize(128, 128);
        SideR2.mirror = true;
        setRotation(SideR2, 0F, 0F, 0F);
        SideR3 = new ModelRenderer(this, 100, 40);
        SideR3.addBox(0F, 0F, 0F, 2, 4, 6);
        SideR3.setRotationPoint(-8F, -4F, 0F);
        SideR3.setTextureSize(128, 128);
        SideR3.mirror = true;
        setRotation(SideR3, 0F, 0F, 0F);
        SideR4 = new ModelRenderer(this, 100, 60);
        SideR4.addBox(0F, 0F, 0F, 2, 4, 4);
        SideR4.setRotationPoint(-8F, -8F, 2F);
        SideR4.setTextureSize(128, 128);
        SideR4.mirror = true;
        setRotation(SideR4, 0F, 0F, 0F);
        SideL1 = new ModelRenderer(this, 70, 0);
        SideL1.addBox(0F, 0F, 0F, 2, 4, 10);
        SideL1.setRotationPoint(6F, 4F, -4F);
        SideL1.setTextureSize(128, 128);
        SideL1.mirror = true;
        setRotation(SideL1, 0F, 0F, 0F);
        SideL2 = new ModelRenderer(this, 70, 20);
        SideL2.addBox(0F, 0F, 0F, 2, 4, 8);
        SideL2.setRotationPoint(6F, 0F, -2F);
        SideL2.setTextureSize(128, 128);
        SideL2.mirror = true;
        setRotation(SideL2, 0F, 0F, 0F);
        SideL3 = new ModelRenderer(this, 70, 40);
        SideL3.addBox(0F, 0F, 0F, 2, 4, 6);
        SideL3.setRotationPoint(6F, -4F, 0F);
        SideL3.setTextureSize(128, 128);
        SideL3.mirror = true;
        setRotation(SideL3, 0F, 0F, 0F);
        SideL4 = new ModelRenderer(this, 70, 60);
        SideL4.addBox(0F, 0F, 0F, 2, 4, 4);
        SideL4.setRotationPoint(6F, -8F, 2F);
        SideL4.setTextureSize(128, 128);
        SideL4.mirror = true;
        setRotation(SideL4, 0F, 0F, 0F);

        Button1 = new ModelRenderer(this, 0, 2);
        Button1.addBox(0F, 0F, 0F, 1, 1, 1);
        Button1.setRotationPoint(-1F, 7.5F, -6F);
        Button1.setTextureSize(128, 128);
        Button1.mirror = true;
        setRotation(Button1, 0F, 0F, 0F);
        Button2 = new ModelRenderer(this, 0, 0);
        Button2.addBox(0F, 0F, 0F, 1, 1, 1);
        Button2.setRotationPoint(0F, 7.5F, -5F);
        Button2.setTextureSize(128, 128);
        Button2.mirror = true;
        setRotation(Button2, 0F, 0F, 0F);
        Button3 = new ModelRenderer(this, 4, 2);
        Button3.addBox(0F, 0F, 0F, 1, 1, 1);
        Button3.setRotationPoint(2F, 7.5F, -6F);
        Button3.setTextureSize(128, 128);
        Button3.mirror = true;
        setRotation(Button3, 0F, 0F, 0F);
        Button4 = new ModelRenderer(this, 4, 0);
        Button4.addBox(0F, 0F, 0F, 1, 1, 1);
        Button4.setRotationPoint(3F, 7.5F, -5F);
        Button4.setTextureSize(128, 128);
        Button4.mirror = true;
        setRotation(Button4, 0F, 0F, 0F);
        Stick = new ModelRenderer(this, 0, 7);
        Stick.addBox(-0.5F, -2F, -0.5F, 1, 2, 1);
        Stick.setRotationPoint(-4.5F, 8.5F, -5.5F);
        Stick.setTextureSize(128, 128);
        Stick.mirror = true;
        setRotation(Stick, 0F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);

        if (isTopPart) {
            //GlassPane.render(f5);

            Backwall.render(f5);
            Top_Bar.render(f5);
            SideR1.render(f5);
            SideR2.render(f5);
            SideR3.render(f5);
            SideR4.render(f5);
            SideL1.render(f5);
            SideL2.render(f5);
            SideL3.render(f5);
            SideL4.render(f5);
            Button1.render(f5);
            Button2.render(f5);
            Button3.render(f5);
            Button4.render(f5);
            Stick.render(f5);
        }
        else {
            Base.render(f5);
        }
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    @Override
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
    {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    }

}
